image: $MY_CI_IMAGE

services:
  - name: docker:24-dind
    alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - release_deploy
  - create_ecr
  - create_s3
  - front_build
  - Push_to_S3
  - sast
  - unittest
  - func_test
  - image_build
  - push_to_ECR

release_deploy:
  stage: release_deploy
  script:
    - docker run --rm -v ${CI_PROJECT_DIR}/app/backend:/app \
        $CI_REGISTRY_IMAGE/backend:latest \
        python manage.py migrate

create_ecr:
  stage: create_ecr
  script:
    - terraform -chdir=infra init
    - terraform -chdir=infra apply -target=module.ecr -auto-approve

create_s3:
  stage: create_s3
  script:
    - terraform -chdir=infra init
    - terraform -chdir=infra apply -target=module.storage -auto-approve

front_build:
  stage: front_build
  image: node:16
  services: []
  script:
    - cd app/frontend
    - npm install
    - npm run build

Push_to_S3:
  stage: Push_to_S3
  script:
    - aws s3 sync app/frontend/dist s3://$S3_BUCKET --delete

image_build:
  stage: image_build
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA app/backend/

push_to_ECR:
  stage: push_to_ECR
  before_script:
    - aws --version
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA

variables:
  MY_CI_IMAGE:        $MY_CI_IMAGE
  AWS_ACCESS_KEY_ID:     $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION:    ap-northeast-1
  S3_BUCKET:             your-vue-s3-bucket-name
